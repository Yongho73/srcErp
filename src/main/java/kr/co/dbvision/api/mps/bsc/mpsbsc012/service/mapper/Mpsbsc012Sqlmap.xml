<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.dbvision.api.mps.bsc.mpsbsc012.service.mapper.Mpsbsc012Mapper">

    <select id="selectMpsbsc012List" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc012.service.mapper.Mpsbsc012Mapper.selectMpsbsc012List */
        SELECT
               APPLC_YY,
               LWLT_AMT,
               UPLMT_AMT,
               APPLC_BEGIN_YM,
               APPLC_END_YM,
               FAM1_TAX,
               FAM2_TAX,
               FAM3_TAX,
               FAM4_TAX,
               FAM5_TAX,
               FAM6_TAX,
               FAM7_TAX,
               FAM8_TAX,
               FAM9_TAX,
               FAM10_TAX,
               FAM11_TAX,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MPS_SIMPLCTY_TAXTBL A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="applcYy != null and applcYy != ''">
                AND APPLC_YY = #{applcYy}
            </if>
            <if test="lwltAmt != null and lwltAmt != ''">
                AND LWLT_AMT = #{lwltAmt}
            </if>
            <if test="uplmtAmt != null and uplmtAmt != ''">
                AND UPLMT_AMT = #{uplmtAmt}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= TO_DATE(#{sRegDt} || '000000','YYYY-MM-DDHH24MISS')
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= TO_DATE(#{eRegDt} || '235959','YYYY-MM-DDHH24MISS')
                ]]>
             </if>
        </trim>
        ORDER BY LWLT_AMT, UPLMT_AMT
    </select>

    <select id="selectMpsbsc012" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc012.service.mapper.Mpsbsc012Mapper.selectMpsbsc012 */
        SELECT
               APPLC_YY,
               LWLT_AMT,
               UPLMT_AMT,
               APPLC_BEGIN_YM,
               APPLC_END_YM,
               FAM1_TAX,
               FAM2_TAX,
               FAM3_TAX,
               FAM4_TAX,
               FAM5_TAX,
               FAM6_TAX,
               FAM7_TAX,
               FAM8_TAX,
               FAM9_TAX,
               FAM10_TAX,
               FAM11_TAX,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MPS_SIMPLCTY_TAXTBL A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            ROWNUM = 1
            <if test="applcYy != null and applcYy != ''">
                AND APPLC_YY = #{applcYy}
            </if>
            <if test="lwltAmt != null and lwltAmt != ''">
                AND LWLT_AMT = #{lwltAmt}
            </if>
            <if test="uplmtAmt != null and uplmtAmt != ''">
                AND UPLMT_AMT = #{uplmtAmt}
            </if>
            <if test="applcBeginYm != null and applcBeginYm != ''">
                AND APPLC_BEGIN_YM = #{applcBeginYm}
            </if>
            <if test="applcEndYm != null and applcEndYm != ''">
                AND APPLC_END_YM = #{applcEndYm}
            </if>
        </trim>
    </select>

    <update id="saveMpsbsc012" parameterType="EgovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc012.service.mapper.Mpsbsc012Mapper.saveMpsbsc012 */
        MERGE INTO MPS_SIMPLCTY_TAXTBL A
             USING (SELECT
                    #{applcYy} APPLC_YY,
                    REPLACE(#{lwltAmt},',','') LWLT_AMT,
                    REPLACE(#{uplmtAmt},',','') UPLMT_AMT
                    FROM DUAL) B
                ON (
                    A.APPLC_YY = B.APPLC_YY AND 
                    A.LWLT_AMT = B.LWLT_AMT AND 
                    A.UPLMT_AMT = B.UPLMT_AMT
                   )
        WHEN MATCHED THEN
        UPDATE SET

               APPLC_BEGIN_YM= #{applcBeginYm},
               APPLC_END_YM= #{applcEndYm},
               FAM1_TAX= REPLACE(#{fam1Tax},',',''),
               FAM2_TAX= REPLACE(#{fam2Tax},',',''),
               FAM3_TAX= REPLACE(#{fam3Tax},',',''),
               FAM4_TAX= REPLACE(#{fam4Tax},',',''),
               FAM5_TAX= REPLACE(#{fam5Tax},',',''),
               FAM6_TAX= REPLACE(#{fam6Tax},',',''),
               FAM7_TAX= REPLACE(#{fam7Tax},',',''),
               FAM8_TAX= REPLACE(#{fam8Tax},',',''),
               FAM9_TAX= REPLACE(#{fam9Tax},',',''),
               FAM10_TAX= REPLACE(#{fam10Tax},',',''),
               FAM11_TAX= REPLACE(#{fam11Tax},',',''),
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               APPLC_YY,
               LWLT_AMT,
               UPLMT_AMT,
               APPLC_BEGIN_YM,
               APPLC_END_YM,
               FAM1_TAX,
               FAM2_TAX,
               FAM3_TAX,
               FAM4_TAX,
               FAM5_TAX,
               FAM6_TAX,
               FAM7_TAX,
               FAM8_TAX,
               FAM9_TAX,
               FAM10_TAX,
               FAM11_TAX,
               REG_DT,
               REG_ID

        ) VALUES (

               #{applcYy},
               REPLACE(#{lwltAmt},',',''),
               REPLACE(#{uplmtAmt},',',''),
               #{applcBeginYm},
               #{applcEndYm},
               REPLACE(#{fam1Tax},',',''),
               REPLACE(#{fam2Tax},',',''),
               REPLACE(#{fam3Tax},',',''),
               REPLACE(#{fam4Tax},',',''),
               REPLACE(#{fam5Tax},',',''),
               REPLACE(#{fam6Tax},',',''),
               REPLACE(#{fam7Tax},',',''),
               REPLACE(#{fam8Tax},',',''),
               REPLACE(#{fam9Tax},',',''),
               REPLACE(#{fam10Tax},',',''),
               REPLACE(#{fam11Tax},',',''),
               SYSDATE,
               #{regId}

        )
    </update>

    <delete id="deleteMpsbsc012" parameterType="EgovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc012.service.mapper.Mpsbsc012Mapper.deleteMpsbsc012 */
        DELETE FROM MPS_SIMPLCTY_TAXTBL

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND APPLC_YY = #{applcYy}
        </trim>
    </delete>
    
    <update id="insertCopyApplcYyMpsbsc012" parameterType="EgovMapForNull">
     /* kr.co.dbvision.api.mps.bsc.mpsbsc012.service.mapper.Mpsbsc012Mapper.insertCopyApplcYyMpsbsc012 */
	        INSERT INTO MPS_SIMPLCTY_TAXTBL (
	            APPLC_YY,
	            LWLT_AMT,
	            UPLMT_AMT,
	            APPLC_BEGIN_YM,
	            APPLC_END_YM,
	            FAM1_TAX,
	            FAM2_TAX,
	            FAM3_TAX,
	            FAM4_TAX,
	            FAM5_TAX,
	            FAM6_TAX,
	            FAM7_TAX,
	            FAM8_TAX,
	            FAM9_TAX,
	            FAM10_TAX,
	            FAM11_TAX,
	            REG_DT,
	            REG_ID)
	    SELECT  
	            #{applcYy},
	            LWLT_AMT,
	            UPLMT_AMT,
	            (#{applcYy}||'01'),
	            (#{applcYy}||'12'),
	            FAM1_TAX,
	            FAM2_TAX,
	            FAM3_TAX,
	            FAM4_TAX,
	            FAM5_TAX,
	            FAM6_TAX,
	            FAM7_TAX,
	            FAM8_TAX,
	            FAM9_TAX,
	            FAM10_TAX,
	            FAM11_TAX,
	            SYSDATE,
	            #{regId}
	      FROM MPS_SIMPLCTY_TAXTBL
	      <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND APPLC_YY = TO_CHAR(TO_NUMBER(#{applcYy})-1)
          </trim>
	      ORDER BY LWLT_AMT
     </update>
</mapper>
