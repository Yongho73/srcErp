<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper">
    
    <select id="selectMpsbsc007MasterList" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.selectMpsbsc007MasterList */
        SELECT
               SUBSTR(APPLC_YM, 1,4) || '-' ||  SUBSTR(APPLC_YM, 5, 2) AS APPLC_YM,
               RM,
               (SELECT MAX(APPLC_YM) AS MAX_APPLC_YM FROM MPS_SRCLSTBL) AS MAX_APPLC_YM,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MPS_SRCLSTBL A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
               <if test="applcYm != null and applcYm != ''">
                AND  SUBSTR(APPLC_YM, 1, 4) =  #{applcYm}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= TO_DATE(#{sRegDt} || '000000','YYYY-MM-DDHH24MISS')
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= TO_DATE(#{eRegDt} || '235959','YYYY-MM-DDHH24MISS')
                ]]>
             </if>
        </trim>
        ORDER BY APPLC_YM DESC
    </select>
    
    <select id="selectMpsbsc007ClsfCodeList" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.selectMpsbsc007ClsfCodeList */
        SELECT
               DISTINCT  A.CLSF_CODE
                                 , A.CLSF_NM
          FROM     MHS_CLSF_CODE A, MPS_SRCLSTBLDETAIL B
          WHERE  A.CLSF_CODE = B.CLSF_CODE
            <if test="applcYm != null and applcYm != ''">
                AND B.APPLC_YM = #{applcYm}
            </if>
            <if test="applcYm == null or applcYm == ''">
                    AND B.APPLC_YM = (SELECT MAX(APPLC_YM) FROM MPS_SRCLSTBLDETAIL )
            </if>            
        ORDER BY A.CLSF_CODE 
    </select>
    
    
    <select id="selectMpsbsc007Master" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.selectMpsbsc007Master */
        SELECT
               APPLC_YM,
               RM,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MPS_SRCLSTBL A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="applcYm != null and applcYm != ''">
                AND APPLC_YM= #{applcYm}
            </if>
        </trim>
    </select>

    <update id="saveMpsbsc007Master" parameterType="kr.co.dbvision.api.mps.bsc.mpsbsc007.entity.Mpsbsc007">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.saveMpsbsc007Master */
        MERGE INTO MPS_SRCLSTBL A
             USING (SELECT
                     REPLACE(#{applcYm}, '-','') APPLC_YM
                    FROM DUAL) B
                ON (
                    A.APPLC_YM = B.APPLC_YM
                   )
        WHEN MATCHED THEN
        UPDATE SET
               RM = #{rm},
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (
               APPLC_YM,
               RM,
               REG_DT,
               REG_ID

        ) VALUES (
               REPLACE(#{applcYm}, '-',''),
               #{rm},
               SYSDATE,
               #{regId}
        )
    </update>
    
    <update id="saveMpsbsc007Detail" parameterType="egovMapForNull" >    
        INSERT INTO MPS_SRCLSTBLDETAIL
		(
			  APPLC_YM
			, CLSF_CODE
			, SRCLS_CODE
			, AMT
			, REG_DT
			, REG_ID)
		SELECT 
			  #{applcYm}
			, B.CLSF_CODE
			, A.CODE
			, NVL((SELECT AMT FROM MPS_SRCLSTBLDETAIL 
			           WHERE APPLC_YM  = (SELECT MAX(APPLC_YM)  FROM MPS_SRCLSTBLDETAIL )
			            AND     CLSF_CODE = B.CLSF_CODE 
			            AND     SRCLS_CODE = A.CODE                                                                                                             
			                            ), 0) AS AMT
			, SYSDATE
			, #{regId}			
			FROM STM_CODE A, MHS_CLSF_CODE B
			WHERE   A.CODEKIND_CODE   = 'C285'
			AND         A.CODE != '00'
			AND         A.USE_AT  = '1'
			AND         B.USE_AT  = '1' 			
    </update>

    
    <update id="copyMpsbsc007" parameterType="egovMapForNull" >
        DECLARE BEGIN

        
        DELETE FROM MPS_SRCLSTBLDETAIL
         WHERE APPLC_YY = #{applcYy};
    
        INSERT INTO MPS_SRCLSTBLDETAIL
            (   
               APPLC_YY,
               CLSF_CODE,
               GRAD_1,
               GRAD_2,
               GRAD_3,
               GRAD_4,
               GRAD_5,
               GRAD_6,
               GRAD_7,
               GRAD_8,
               GRAD_9,
               GRAD_10,
               GRAD_11,
               GRAD_12,
               GRAD_13,
               GRAD_14,
               GRAD_15,
               GRAD_16,
               GRAD_17,
               GRAD_18,
               GRAD_19,
               GRAD_20,
               GRAD_21,
               GRAD_22,
               GRAD_23,
               GRAD_24,
               GRAD_25,
               GRAD_26,
               GRAD_27,
               GRAD_28,
               GRAD_29,
               GRAD_30,
               REG_DT,
               REG_ID
            )
            SELECT
               #{applcYy},
               CLSF_CODE,
               GRAD_1,
               GRAD_2,
               GRAD_3,
               GRAD_4,
               GRAD_5,
               GRAD_6,
               GRAD_7,
               GRAD_8,
               GRAD_9,
               GRAD_10,
               GRAD_11,
               GRAD_12,
               GRAD_13,
               GRAD_14,
               GRAD_15,
               GRAD_16,
               GRAD_17,
               GRAD_18,
               GRAD_19,
               GRAD_20,
               GRAD_21,
               GRAD_22,
               GRAD_23,
               GRAD_24,
               GRAD_25,
               GRAD_26,
               GRAD_27,
               GRAD_28,
               GRAD_29,
               GRAD_30,
               SYSDATE,
               #{regId}
            FROM MPS_SRCLSTBLDETAIL
           WHERE APPLC_YY = (#{applcYy}-1);
           
           END;

           
    </update>
    
    <select id="selectMpsbsc007List" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.selectMpsbsc007List */             
		    SELECT  *
		    FROM (
		        SELECT *
		         FROM (
		            SELECT  APPLC_YM, SRCLS_CODE, CLSF_CODE, AMT 
		               FROM   MPS_SRCLSTBLDETAIL
		                WHERE APPLC_YM = #{applcYm}
		            ) 
		            PIVOT
		            ( 
		                SUM(AMT) FOR CLSF_CODE IN (  ${clsfCode} )
		            )
		        ) A
		    ORDER BY A.SRCLS_CODE		        
        </select>

    <select id="selectMpsbsc007" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.selectMpsbsc007 */
        SELECT
               APPLC_YY,
               CLSF_CODE,
               GRAD_1,
               GRAD_2,
               GRAD_3,
               GRAD_4,
               GRAD_5,
               GRAD_6,
               GRAD_7,
               GRAD_8,
               GRAD_9,
               GRAD_10,
               GRAD_11,
               GRAD_12,
               GRAD_13,
               GRAD_14,
               GRAD_15,
               GRAD_16,
               GRAD_17,
               GRAD_18,
               GRAD_19,
               GRAD_20,
               GRAD_21,
               GRAD_22,
               GRAD_23,
               GRAD_24,
               GRAD_25,
               GRAD_26,
               GRAD_27,
               GRAD_28,
               GRAD_29,
               GRAD_30,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MPS_SRCLSTBLDETAIL A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="applcYy != null and applcYy != ''">
                AND APPLC_YY = #{applcYy}
            </if>
            <if test="clsfCode != null and clsfCode != ''">
                AND CLSF_CODE = #{clsfCode}
            </if>
        </trim>
    </select>

    <update id="saveMpsbsc007" parameterType="kr.co.dbvision.api.mps.bsc.mpsbsc007.entity.Mpsbsc007">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.saveMpsbsc007 */
        MERGE INTO MPS_SRCLSTBLDETAIL A
             USING (SELECT
                    #{applcYm}     APPLC_YM,
                    #{clsfCode}   CLSF_CODE,
                    #{srclsCode} SRCLS_CODE
                    FROM DUAL) B
                ON (
                              A.APPLC_YM = B.APPLC_YM 
                     AND A.CLSF_CODE = B.CLSF_CODE
                     AND A.SRCLS_CODE = B.SRCLS_CODE
                   )
        WHEN MATCHED THEN
        UPDATE SET
               AMT        = #{amt},               
               UPT_DT = SYSDATE,
               UPT_ID  = #{uptId}
        WHEN NOT MATCHED THEN
        INSERT (
               APPLC_YM,
               CLSF_CODE,
               SRCLS_CODE,    
               AMT,        
               REG_DT,
               REG_ID
        ) VALUES (
               #{applcYm},
               #{clsfCode},
               #{srclsCode},               
               #{amt},
                SYSDATE,
               #{regId}
        )
    </update>

    <delete id="deleteMpsbsc007" parameterType="kr.co.dbvision.api.mps.bsc.mpsbsc007.entity.Mpsbsc007">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.deleteMpsbsc007 */
        DELETE FROM MPS_SRCLSTBLDETAIL

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND APPLC_YY = #{applcYy}
                AND CLSF_CODE = #{clsfCode}
        </trim>
    </delete>
    
    <delete id="deleteMpsbsc007All" parameterType="kr.co.dbvision.api.mps.bsc.mpsbsc007.entity.Mpsbsc007">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.deleteMpsbsc007 */
        DELETE FROM MPS_SRCLSTBLDETAIL

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND APPLC_YM = #{applcYm}
        </trim>
    </delete>
    
    
    <delete id="deleteMpsbsc007Master" parameterType="kr.co.dbvision.api.mps.bsc.mpsbsc007.entity.Mpsbsc007">
        /* kr.co.dbvision.api.mps.bsc.mpsbsc007.service.mapper.Mpsbsc007Mapper.deleteMpsbsc007 */
        DELETE FROM MPS_SRCLSTBL

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND APPLC_YM = #{applcYm}
        </trim>
    </delete>
    
    
</mapper>
