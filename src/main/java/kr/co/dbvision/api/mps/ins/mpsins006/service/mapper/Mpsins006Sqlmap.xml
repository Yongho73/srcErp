<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.dbvision.api.mps.ins.mpsins006.service.mapper.Mpsins006Mapper">

    <select id="selectMpsins006List" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.ins.mpsins006.service.mapper.Mpsins006Mapper.selectMpsins006List */
        SELECT
               A.EMPNO,
               A.NPN_ACQS_DE,
               A.HLTHINS_ACQS_DE,
               A.EPIS_ACQS_DE,
               A.NPN_AT,
               A.HLTHINS_AT,
               A.EPIS_AT,
               A.IACI_AT,
               A.PROCESS_AT,
               A.MARM_NPN_AMT,
               A.NPN_LABRR_AMT,
               A.NPN_BPRPRR_AMT,
               A.MARM_HISR_AMT,
               A.HEALTH_LABRR_AMT,
               A.HEALTH_BPRPRR_AMT,
               A.RCPER_LABRR_AMT,
               A.RCPER_BPRPRR_AMT,
               A.MARM_EPIS_AMT,
               A.LABOR_LABRR_AMT,
               A.LABOR_BPRPRR_AMT,
               A.LABOR_STABLE_AMT,
               A.IACI_BPRPRR_AMT,
               A.MNTHLY_AMT_BEYEAR_AMT,
               A.MNTHLY_AMT_MT,
               A.LTCI_RDCXPT_AT,
               A.NPN_POSTPNE_AT,
               A.HLTHINS_POSTPNE_AT,
               A.EPIS_POSTPNE_AT,
               A.IACI_POSTPNE_AT,
               FNC_DATESTR(A.UNPAID_RECKN_DE) AS UNPAID_RECKN_DE,
               FNC_DATESTR(A.PAY_RE_DE) AS PAY_RE_DE,
               A.MTINCOME_AMT,
               A.MONDECL_RESN_CN,
               A.POSTPNE_RESN_CN,
               A.POSTPNE_SDT,
               A.POSTPNE_EDT,
               A.POSTPNE_TRMNATDE,
               A.BFCHG_CN,
               A.AFCHG_CN,
               A.INSRNC_CANCEL_NO,
               A.PAYPOSTPNE_SE_CODE,
               A.CHANGE_SE_CODE,
               A.CHANGE_INSRNC_CODE,
               A.REG_DT,
               A.REG_ID,
               A.UPT_DT,
               A.UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM,
               B.KOR_NM,
               B.JSSFC_CODE,
               B.DEPT_CODE,
               FNC_GETDEPTNM(B.DEPT_CODE) AS DEPT_CODE_NM,
               B.HFFS_SE
          FROM MPS_SLNRC_STMT A, MHS_EMP B

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                  A.EMPNO = B.EMPNO
             <if test="deptCode != null and deptCode != ''">
                AND B.DEPT_CODE = #{deptCode}
            </if>
            <if test="empno != null and empno != ''">
                AND A.EMPNO = #{empno}
            </if>
             <if test="hffsSe != null and hffsSe != ''">
                AND B.HFFS_SE = #{hffsSe}
            </if>
            <if test="deptCodeNm != null and deptCodeNm != ''">
                AND FNC_GETDEPTNM(B.DEPT_CODE) = #{deptCodeNm}
            </if>
        </trim>
    </select>

    <select id="selectMpsins006" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.ins.mpsins006.service.mapper.Mpsins006Mapper.selectMpsins006 */
        SELECT
               STTEMNT_DE,
               EMPNO,
               NPN_ACQS_DE,
               HLTHINS_ACQS_DE,
               EPIS_ACQS_DE,
               NPN_AT,
               HLTHINS_AT,
               EPIS_AT,
               IACI_AT,
               PROCESS_AT,
               MARM_NPN_AMT,
               NPN_LABRR_AMT,
               NPN_BPRPRR_AMT,
               MARM_HISR_AMT,
               HEALTH_LABRR_AMT,
               HEALTH_BPRPRR_AMT,
               RCPER_LABRR_AMT,
               RCPER_BPRPRR_AMT,
               MARM_EPIS_AMT,
               LABOR_LABRR_AMT,
               LABOR_BPRPRR_AMT,
               LABOR_STABLE_AMT,
               IACI_BPRPRR_AMT,
               MNTHLY_AMT_BEYEAR_AMT,
               MNTHLY_AMT_MT,
               LTCI_RDCXPT_AT,
               NPN_POSTPNE_AT,
               HLTHINS_POSTPNE_AT,
               EPIS_POSTPNE_AT,
               IACI_POSTPNE_AT,
               UNPAID_RECKN_DE,
               PAY_RE_DE,
               MTINCOME_AMT,
               MONDECL_RESN_CN,
               POSTPNE_RESN_CN,
               POSTPNE_SDT,
               POSTPNE_EDT,
               POSTPNE_TRMNATDE,
               BFCHG_CN,
               AFCHG_CN,
               INSRNC_CANCEL_NO,
               PAYPOSTPNE_SE_CODE,
               CHANGE_SE_CODE,
               CHANGE_INSRNC_CODE,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MPS_SLNRC_STMT A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="empno != null and empno != ''">
                AND EMPNO = #{empno}
            </if>
        </trim>
    </select>

    <update id="saveMpsins006" parameterType="kr.co.dbvision.api.mps.ins.mpsins006.entity.Mpsins006">
        /* kr.co.dbvision.api.mps.ins.mpsins006.service.mapper.Mpsins006Mapper.saveMpsins006 */
        MERGE INTO MPS_SLNRC_STMT A
             USING (SELECT
                    #{empno} EMPNO
                    FROM DUAL) B
                ON (
                    A.EMPNO = B.EMPNO
                   )
        WHEN MATCHED THEN
        UPDATE SET

               STTEMNT_DE= REPLACE(#{sttemntDe},'-',''),
               NPN_ACQS_DE= REPLACE(#{npnAcqsDe},'-',''),
               HLTHINS_ACQS_DE= REPLACE(#{hlthinsAcqsDe},'-',''),
               EPIS_ACQS_DE= REPLACE(#{episAcqsDe},'-',''),
               NPN_AT= #{npnAt},
               HLTHINS_AT= #{hlthinsAt},
               EPIS_AT= #{episAt},
               IACI_AT= #{iaciAt},
               PROCESS_AT= #{processAt},
               MARM_NPN_AMT= #{marmNpnAmt},
               NPN_LABRR_AMT= #{npnLabrrAmt},
               NPN_BPRPRR_AMT= #{npnBprprrAmt},
               MARM_HISR_AMT= #{marmHisrAmt},
               HEALTH_LABRR_AMT= #{healthLabrrAmt},
               HEALTH_BPRPRR_AMT= #{healthBprprrAmt},
               RCPER_LABRR_AMT= #{rcperLabrrAmt},
               RCPER_BPRPRR_AMT= #{rcperBprprrAmt},
               MARM_EPIS_AMT= #{marmEpisAmt},
               LABOR_LABRR_AMT= #{laborLabrrAmt},
               LABOR_BPRPRR_AMT= #{laborBprprrAmt},
               LABOR_STABLE_AMT= #{laborStableAmt},
               IACI_BPRPRR_AMT= #{iaciBprprrAmt},
               MNTHLY_AMT_BEYEAR_AMT= #{mnthlyAmtBeyearAmt},
               MNTHLY_AMT_MT= #{mnthlyAmtMt},
               LTCI_RDCXPT_AT= #{ltciRdcxptAt},
               NPN_POSTPNE_AT= #{npnPostpneAt},
               HLTHINS_POSTPNE_AT= #{hlthinsPostpneAt},
               EPIS_POSTPNE_AT= #{episPostpneAt},
               IACI_POSTPNE_AT= #{iaciPostpneAt},
               UNPAID_RECKN_DE= REPLACE(#{unpaidRecknDe},'-',''),
               PAY_RE_DE= REPLACE(#{payReDe},'-',''),
               MTINCOME_AMT= #{mtincomeAmt},
               MONDECL_RESN_CN= #{mondeclResnCn},
               POSTPNE_RESN_CN= #{postpneResnCn},
               POSTPNE_SDT= #{postpneSdt},
               POSTPNE_EDT= #{postpneEdt},
               POSTPNE_TRMNATDE= #{postpneTrmnatde},
               BFCHG_CN= #{bfchgCn},
               AFCHG_CN= #{afchgCn},
               INSRNC_CANCEL_NO= #{insrncCancelNo},
               PAYPOSTPNE_SE_CODE= #{paypostpneSeCode},
               CHANGE_SE_CODE= #{changeSeCode},
               CHANGE_INSRNC_CODE= #{changeInsrncCode},
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               STTEMNT_DE,
               EMPNO,
               NPN_ACQS_DE,
               HLTHINS_ACQS_DE,
               EPIS_ACQS_DE,
               NPN_AT,
               HLTHINS_AT,
               EPIS_AT,
               IACI_AT,
               PROCESS_AT,
               MARM_NPN_AMT,
               NPN_LABRR_AMT,
               NPN_BPRPRR_AMT,
               MARM_HISR_AMT,
               HEALTH_LABRR_AMT,
               HEALTH_BPRPRR_AMT,
               RCPER_LABRR_AMT,
               RCPER_BPRPRR_AMT,
               MARM_EPIS_AMT,
               LABOR_LABRR_AMT,
               LABOR_BPRPRR_AMT,
               LABOR_STABLE_AMT,
               IACI_BPRPRR_AMT,
               MNTHLY_AMT_BEYEAR_AMT,
               MNTHLY_AMT_MT,
               LTCI_RDCXPT_AT,
               NPN_POSTPNE_AT,
               HLTHINS_POSTPNE_AT,
               EPIS_POSTPNE_AT,
               IACI_POSTPNE_AT,
               UNPAID_RECKN_DE,
               PAY_RE_DE,
               MTINCOME_AMT,
               MONDECL_RESN_CN,
               POSTPNE_RESN_CN,
               POSTPNE_SDT,
               POSTPNE_EDT,
               POSTPNE_TRMNATDE,
               BFCHG_CN,
               AFCHG_CN,
               INSRNC_CANCEL_NO,
               PAYPOSTPNE_SE_CODE,
               CHANGE_SE_CODE,
               CHANGE_INSRNC_CODE,
               REG_DT,
               REG_ID

        ) VALUES (

               REPLACE(#{sttemntDe},'-',''),
               #{empno},
               REPLACE(#{npnAcqsDe},'-',''),
               REPLACE(#{hlthinsAcqsDe},'-',''),
               REPLACE(#{episAcqsDe},'-',''),
               #{npnAt},
               #{hlthinsAt},
               #{episAt},
               #{iaciAt},
               #{processAt},
               #{marmNpnAmt},
               #{npnLabrrAmt},
               #{npnBprprrAmt},
               #{marmHisrAmt},
               #{healthLabrrAmt},
               #{healthBprprrAmt},
               #{rcperLabrrAmt},
               #{rcperBprprrAmt},
               #{marmEpisAmt},
               #{laborLabrrAmt},
               #{laborBprprrAmt},
               #{laborStableAmt},
               #{iaciBprprrAmt},
               #{mnthlyAmtBeyearAmt},
               #{mnthlyAmtMt},
               #{ltciRdcxptAt},
               #{npnPostpneAt},
               #{hlthinsPostpneAt},
               #{episPostpneAt},
               #{iaciPostpneAt},
               REPLACE(#{unpaidRecknDe},'-',''),
               REPLACE(#{payReDe},'-',''),
               #{mtincomeAmt},
               #{mondeclResnCn},
               #{postpneResnCn},
               #{postpneSdt},
               #{postpneEdt},
               #{postpneTrmnatde},
               #{bfchgCn},
               #{afchgCn},
               #{insrncCancelNo},
               #{paypostpneSeCode},
               #{changeSeCode},
               #{changeInsrncCode},
               SYSDATE,
               #{regId}

        )
    </update>

    <delete id="deleteMpsins006" parameterType="kr.co.dbvision.api.mps.ins.mpsins006.entity.Mpsins006">
        /* kr.co.dbvision.api.mps.ins.mpsins006.service.mapper.Mpsins006Mapper.deleteMpsins006 */
        DELETE FROM MPS_SLNRC_STMT

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
        </trim>
    </delete>
    
    <select id="findMpsinsSUM" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mps.ins.mpsins006.service.mapper.Mpsins006Mapper.findMpsinsSUM */
        SELECT '근로자 부담금' AS LABRR,
                SUM(NPN_LABRR_AMT)+SUM(HEALTH_LABRR_AMT)+SUM(RCPER_LABRR_AMT)+SUM(LABOR_LABRR_AMT) AS TOTAL_LABRR,
               '사업자 부담금' AS BPRPRR,
                SUM(NPN_BPRPRR_AMT)+SUM(HEALTH_BPRPRR_AMT)+SUM(RCPER_BPRPRR_AMT)+SUM(LABOR_BPRPRR_AMT)+SUM(IACI_BPRPRR_AMT) AS TOTAL_BPRPRR
          FROM MPS_SLNRC_STMT
    </select>
    
       <select id="checkDataMpsins006" parameterType="egovMapForNull" resultType="egovMapForNull">
       /* kr.co.dbvision.api.mps.cal.mpsins006.service.mapper.Mpsins006Mapper.checkDataMpsins006 */
       <trim>
               SELECT '1' AS CHK1, EMPNO AS NM FROM MHS_EMP WHERE EMPNO = REGEXP_REPLACE(#{empno}, '[^0-9]+')
           <if test="npnAcqsDe != null and npnAcqsDe != ''">
               UNION ALL
               SELECT '2' AS CHK1, TO_CHAR(NPN_ACQS_DE) AS NM FROM MPS_SLNRC_STMT WHERE NPN_ACQS_DE = REGEXP_REPLACE(#{npnAcqsDe}, '[^0-9]+')
           </if>
           <if test="npnLabrrAmt != null and npnLabrrAmt != ''">
               UNION ALL
               SELECT '3' AS CHK1, TO_CHAR(NPN_LABRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE NPN_LABRR_AMT = REGEXP_REPLACE(#{npnLabrrAmt}, '[^0-9]+')
           </if>
           <if test="npnBprprrAmt != null and npnBprprrAmt != ''">
               UNION ALL
               SELECT '4' AS CHK1, TO_CHAR(NPN_BPRPRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE NPN_BPRPRR_AMT = REGEXP_REPLACE(#{npnBprprrAmt}, '[^0-9]+')
           </if>
           <if test="marmNpnAmt != null and marmNpnAmt != ''">
               UNION ALL
               SELECT '5' AS CHK1, TO_CHAR(MARM_NPN_AMT) AS NM FROM MPS_SLNRC_STMT WHERE MARM_NPN_AMT = REGEXP_REPLACE(#{marmNpnAmt}, '[^0-9]+')
           </if>
           <if test="hlthinsAcqsDe != null and hlthinsAcqsDe != ''">
               UNION ALL
               SELECT '6' AS CHK1, TO_CHAR(HLTHINS_ACQS_DE) AS NM FROM MPS_SLNRC_STMT WHERE HLTHINS_ACQS_DE = REGEXP_REPLACE(#{hlthinsAcqsDe}, '[^0-9]+')
           </if>
           <if test="healthLabrrAmt != null and healthLabrrAmt != ''">
               UNION ALL
               SELECT '7' AS CHK1, TO_CHAR(HEALTH_LABRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE HEALTH_LABRR_AMT = REGEXP_REPLACE(#{healthLabrrAmt}, '[^0-9]+')
           </if>
           <if test="healthBprprrAmt != null and healthBprprrAmt != ''">
               UNION ALL
               SELECT '8' AS CHK1, TO_CHAR(HEALTH_BPRPRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE HEALTH_BPRPRR_AMT = REGEXP_REPLACE(#{healthBprprrAmt}, '[^0-9]+')
           </if>
           <if test="ltciRdcxptAt != null and ltciRdcxptAt != ''">
               UNION ALL
               SELECT '9' AS CHK1, LTCI_RDCXPT_AT AS NM FROM MPS_SLNRC_STMT WHERE LTCI_RDCXPT_AT = REGEXP_REPLACE(#{ltciRdcxptAt}, '[^0-9]+')
           </if>
           <if test="rcperLabrrAmt != null and rcperLabrrAmt != ''">
               UNION ALL
               SELECT '10' AS CHK1, TO_CHAR(RCPER_LABRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE RCPER_LABRR_AMT = REGEXP_REPLACE(#{rcperLabrrAmt}, '[^0-9]+')
           </if>
           <if test="rcperBprprrAmt != null and rcperBprprrAmt != ''">
               UNION ALL
               SELECT '11' AS CHK1, TO_CHAR(RCPER_BPRPRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE RCPER_BPRPRR_AMT = REGEXP_REPLACE(#{rcperBprprrAmt}, '[^0-9]+')
           </if>
           <if test="marmHisrAmt != null and marmHisrAmt != ''">
               UNION ALL
               SELECT '12' AS CHK1, TO_CHAR(MARM_HISR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE MARM_HISR_AMT = REGEXP_REPLACE(#{marmHisrAmt}, '[^0-9]+')
           </if>
           <if test="episAcqsDe != null and episAcqsDe != ''">
               UNION ALL
               SELECT '13' AS CHK1, TO_CHAR(EPIS_ACQS_DE) AS NM FROM MPS_SLNRC_STMT WHERE EPIS_ACQS_DE = REGEXP_REPLACE(#{episAcqsDe}, '[^0-9]+')
           </if>   
           <if test="laborLabrrAmt != null and laborLabrrAmt != ''">
               UNION ALL
               SELECT '14' AS CHK1, TO_CHAR(LABOR_LABRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE LABOR_LABRR_AMT = REGEXP_REPLACE(#{laborLabrrAmt}, '[^0-9]+')
           </if>   
           <if test="laborBprprrAmt != null and laborBprprrAmt != ''">
               UNION ALL
               SELECT '15' AS CHK1, TO_CHAR(LABOR_BPRPRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE LABOR_BPRPRR_AMT = REGEXP_REPLACE(#{laborBprprrAmt}, '[^0-9]+')
           </if>   
           <if test="iaciBprprrAmt != null and iaciBprprrAmt != ''">
               UNION ALL
               SELECT '16' AS CHK1, TO_CHAR(IACI_BPRPRR_AMT) AS NM FROM MPS_SLNRC_STMT WHERE IACI_BPRPRR_AMT = REGEXP_REPLACE(#{iaciBprprrAmt}, '[^0-9]+')
           </if>   
           <if test="marmEpisAmt != null and marmEpisAmt != ''">
               UNION ALL
               SELECT '17' AS CHK1, TO_CHAR(MARM_EPIS_AMT) AS NM FROM MPS_SLNRC_STMT WHERE MARM_EPIS_AMT = REGEXP_REPLACE(#{marmEpisAmt}, '[^0-9]+')
           </if>   
       </trim>
    </select>
    
</mapper>
