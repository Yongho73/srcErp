<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper">

    <select id="selectPubusr002List" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.selectPubusr002List */
        SELECT
               A.EMPNO,
               (SELECT KOR_NM FROM MHS_EMP B WHERE B.EMPNO = A.EMPNO) AS EMP_NM,
               CHANGE_REQST_SN,
               FNC_DATESTR(REQST_DE) AS REQST_DE,
               CHANGE_SE,
               FNC_COMCODENM('C212',CHANGE_SE) as CHANGE_SE_NM,
               ATCHMNFL_NO,
               CONFM_STTUS_CODE,
               FNC_COMCODENM('C197',CONFM_STTUS_CODE) as CONFM_STTUS_CODE_NM,
               FNC_DATESTR(CONFM_DE) AS CONFM_DE,
               CONFM_EMPNO,
               RETURN_RESN,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MHS_EMP_CHANGE A
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="empno != null and empno != ''">
                AND EMPNO = #{empno}
            </if>
            <if test="empNm != null and empNm != ''">
                AND EMPNO IN (SELECT EMPNO FROM MHS_EMP WHERE KOR_NM = #{empNm})
            </if>
            <if test="changeReqstSn != null and changeReqstSn != ''">
                AND CHANGE_REQST_SN = #{changeReqstSn}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= CONVERT(DATETIME, #{sRegDt} + ' 00:00:00') 
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= CONVERT(DATETIME, #{eRegDt} + ' 23:59:59')
                ]]>
             </if>
        </trim>
        ORDER BY CHANGE_REQST_SN DESC
    </select>

    <select id="selectPubusr002" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.selectPubusr002 */
        SELECT
               EMPNO, 
               BPLC_CODE,
               KOR_NM,
               ENG_NM, 
               UNISTR(CHCRT_NM) AS CHCRT_NM, 
               TO_CHAR(TO_DATE(FNC_DATESTR(ECNY_DE),'YYYY-MM-DD'),'YYYY-MM-DD') AS ECNY_DE, 
               FNC_DATESTR(RETIRE_DE) AS RETIRE_DE,
               CASE WHEN RETIRE_SE = 'T01' THEN '의원면직'
                    WHEN RETIRE_SE = 'T02' THEN '권고사직'
                    WHEN RETIRE_SE = 'T03' THEN '계약종료'
                    WHEN RETIRE_SE = 'T04' THEN '징계해고'
                    WHEN RETIRE_SE = 'T05' THEN '정년퇴직'
                    WHEN RETIRE_SE = 'T06' THEN '명예퇴직'
                    WHEN RETIRE_SE = 'T07' THEN '조기퇴직'
                    WHEN RETIRE_SE = 'T08' THEN '기타'
                    WHEN RETIRE_SE = 'T09' THEN '임용포기'
                    WHEN RETIRE_SE = 'T10' THEN '당연퇴직'
                    WHEN RETIRE_SE = 'T11' THEN '권고사직'
               END AS RETIRE_SE,
               CASE WHEN EMPL_SE = '001' THEN '정규직' WHEN EMPL_SE = '002' THEN '무기계약직' WHEN EMPL_SE = '004' THEN '계약직'WHEN EMPL_SE = '005' THEN '임시직' END AS EMPL_SE,
               ECNY_SE_CODE,
               FNC_GETDEPTNM(DEPT_CODE) AS DEPT_CODE,
               CASE WHEN HFFS_SE = 'J01' THEN '재직' WHEN HFFS_SE = 'J05' THEN '퇴직' WHEN HFFS_SE ='J03' THEN '휴직' END AS HFFS_SE,
               TO_CHAR(TO_DATE(BRTHDY,'YYYY-MM-DD'),'YYYY-MM-DD') AS BRTHDY, 
               TO_CHAR(TO_DATE(CUR_CLSF_EMPLMNDAY,'YYYY-MM-DD'),'YYYY-MM-DD') AS CUR_CLSF_EMPLMNDAY, 
               SLRCLD_AT, 
               DECODE(A.IHIDNUM,NULL,'',SUBSTR(A.IHIDNUM,1,6)||'-*******') AS IHIDNUM, 
               CASE WHEN SEXDSTN_SE = 'M' THEN '남자' WHEN SEXDSTN_SE = 'F' THEN '여자' END AS SEXDSTN_SE, 
               --CASE WHEN NATVFRGN_SE_CODE = '1' THEN '내국인' WHEN NATVFRGN_SE_CODE = '9' THEN '외국인' END AS 
               NATVFRGN_SE_CODE,
               NLTY_CODE,
               CASE WHEN SRCLS_CODE = '00' THEN '호봉-미적용'
                    ELSE '해당없음' END AS SRCLS_CODE,
               CASE WHEN CLSF_CODE='001' THEN '대표이사'
                    WHEN CLSF_CODE='002' THEN '이사'
                    WHEN CLSF_CODE='003' THEN '부장'
                    WHEN CLSF_CODE='004' THEN '차장'
                    WHEN CLSF_CODE='005' THEN '과장'
                    WHEN CLSF_CODE='006' THEN '대리'
                    WHEN CLSF_CODE='007' THEN '사원'
                    WHEN CLSF_CODE='008' THEN '인턴'
                    WHEN CLSF_CODE='009' THEN '고문'
               END AS CLSF_CODE,
               CASE WHEN OFCPS_CODE='100' THEN '대표이사'
                    WHEN OFCPS_CODE='200' THEN '이사'
                    WHEN OFCPS_CODE='300' THEN '부장'
                    WHEN OFCPS_CODE='400' THEN '차장'
                    WHEN OFCPS_CODE='500' THEN '과장'
                    WHEN OFCPS_CODE='600' THEN '대리'
                    WHEN OFCPS_CODE='700' THEN '사원'
                    WHEN OFCPS_CODE='800' THEN '인턴'
               END AS OFCPS_CODE,
               CASE WHEN JSSFC_CODE ='001' THEN '관리직'
                    WHEN JSSFC_CODE ='002' THEN '개발직'
                    WHEN JSSFC_CODE ='003' THEN '영업직'
                    WHEN JSSFC_CODE ='004' THEN '연구직'
                    WHEN JSSFC_CODE ='005' THEN '웹디자인'
                    WHEN JSSFC_CODE ='009' THEN '임시직'
               END AS JSSFC_CODE,
               CASE WHEN DTY_CODE='001' THEN '일반'
                     WHEN DTY_CODE='002' THEN '인사'
                     WHEN DTY_CODE='003' THEN '급여'
                     WHEN DTY_CODE='004' THEN '복리후생'
                     WHEN DTY_CODE='005' THEN '총무'
                     WHEN DTY_CODE='006' THEN '기술(건축)'
                     WHEN DTY_CODE='007' THEN '기술(소방)'
                     WHEN DTY_CODE='008' THEN '수영강사'
                     WHEN DTY_CODE='009' THEN '헬스강사'
                     WHEN DTY_CODE='010' THEN '테니스강사'
                     WHEN DTY_CODE='011' THEN '주차관리'
                     WHEN DTY_CODE='012' THEN '환경관리'
                     WHEN DTY_CODE='013' THEN '시설안내'
                     WHEN DTY_CODE='014' THEN '사무보조'
                     WHEN DTY_CODE='015' THEN '생활체육'
                     ELSE '해당없음'
               END AS DTY_CODE,
               CASE WHEN RSPOFC_CODE='100' THEN '대표이사'
                    WHEN RSPOFC_CODE='200' THEN '임원'
                    WHEN RSPOFC_CODE='300' THEN '팀장'
                    WHEN RSPOFC_CODE='400' THEN '팀원'
                    WHEN RSPOFC_CODE='500' THEN '부서장'
               END AS RSPOFC_CODE,
               JBLN_CODE,
               ZIP,
               OWNHOM_ADRES,
               OWNHOM_DETAIL_ADRES,
               OWNHOM_ENG_ADRES,
               OWNHOM_TELNO,
               LXTN_TELNO,
               MBTLNUM,
               EMGNC_TELNO,
               EMAIL,
               INDVDL_EMAIL,
               MRRG_AT,
               CASE WHEN MRRG_AT = '1' THEN (SELECT TO_CHAR(TO_DATE(MRRG_DE,'YYYY-MM-DD'),'YYYY-MM-DD') FROM MHS_INDVDLINFO A WHERE A.EMPNO = '202101')
                    ELSE ''
               END AS MRRG_DE,
               LAYOFF_SE_CODE,
               PHOTO_ATCHMNFL_NO,
               SIGN_ATCHMNFL_NO,
               CASHIER_AT,
               HDADPT_AT,
               FNC_GETDEPTNM(HDADPT_DEPT_CODE) AS HDADPT_DEPT_CODE,
               FNC_GETDEPTNM(DISP_DEPT_CODE) AS DISP_DEPT_CODE,
               DPRLR_AT,
               LBUN_SBSCRB_AT,
               MUTAID_SBSCRB_AT,
               DISP_WORK_AT,
               FLEXBIZ_AT,
               BABY_SHRTEN_WORK_AT,
               SALPEAK_AT,
               CASE WHEN SALARY_APRP_CODE = '100' THEN '책정임금'
                    WHEN SALARY_APRP_CODE = '100' THEN '호봉'
                    WHEN SALARY_APRP_CODE = '100' THEN '연봉'
                    ELSE '해당없음'
               END AS SALARY_APRP_CODE,
               ANSALSYS_AT,
               APNTC_SDT,
               APNTC_EDT,
               CASE WHEN INCMTAXRT_CODE = '01' THEN '80%'
                    WHEN INCMTAXRT_CODE = '02' THEN '100%'
                    WHEN INCMTAXRT_CODE = '03' THEN '120%'
                    ELSE '해당없음'
               END AS INCMTAXRT_CODE,
               CASE WHEN SALARY_PYMNT_AT = '1' THEN '지급'
                    WHEN SALARY_PYMNT_AT = '1' THEN '미지급'
                    ELSE '해당없음'
               END AS SALARY_PYMNT_AT,
                CASE WHEN RETIRE_ANNTY_KIND_CODE = '1' THEN '이연계좌'
                    WHEN RETIRE_ANNTY_KIND_CODE = '2' THEN 'IRP'
                    ELSE '해당없음'
               END AS RETIRE_ANNTY_KIND_CODE,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               FNC_DATESTR(NXTTRM_PROMT_DE) AS NXTTRM_PROMT_DE,
               FNC_DATESTR(RETIRE_ANNTY_SBSCRB_DE) AS RETIRE_ANNTY_SBSCRB_DE,
               RETIRE_ANNTY_DPSTNM,
               RETIRE_ANNTY_BANK_CODE,
               RETIRE_ANNTY_ACNUTNO,
               LAYOFF_ALT_HNF_AT,
               FNC_DATESTR(NON_TMLMT_CNTRCT_CHANGE_DE) AS NON_TMLMT_CNTRCT_CHANGE_DE,
               SENIOR_SE,
               FNC_DATESTR(RETIRE_ANNTY_DC_SBSCRB_DE) AS RETIRE_ANNTY_DC_SBSCRB_DE,
               FNC_DATESTR(LAST_PROMT_DE) AS LAST_PROMT_DE,
               FNC_DATESTR(NON_TMLMT_CNTTK_CHANGE_DE) AS NON_TMLMT_CNTTK_CHANGE_DE,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MHS_EMP A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="empno != null and empno != ''">
                AND EMPNO = #{empno}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= TO_DATE(#{sRegDt} || '000000','YYYY-MM-DDHH24MISS')
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= TO_DATE(#{eRegDt} || '235959','YYYY-MM-DDHH24MISS')
                ]]>
             </if>
        </trim>
    </select>

    <select id="searchPubusr002Tab1" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.searchPubusr002Tab1 */
        SELECT
               A.EMPNO,
               A.CHANGE_REQST_SN,
               A.BFCHG_AFCHG_SE,
               A.KOR_NM,
               A.ENG_NM,
               A.CHCRT_NM,
               A.OWNHOM_ZIP,
               A.OWNHOM_ADRES,
               A.OWNHOM_DETAIL_ADRES,
               A.OWNHOM_TELNO,
               A.LXTN_TELNO,
               A.MBTLNUM,
               A.EMGNC_TELNO,
               A.EMAIL,
               A.INDVDL_EMAIL,
               FNC_DATESTR(A.BRTHDY) AS BRTHDY,
               A.SLRCLD_AT,
               A.MRRG_AT,
               FNC_DATESTR(A.MRRG_DE) AS MRRG_DE,
               A.PHOTO_ATCHMNFL_NO,
               A.REG_DT,
               A.REG_ID,
               A.UPT_DT,
               A.UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM,
               
               B.BFCHG_AFCHG_SE AS BF_BFCHG_AFCHG_SE,
               B.KOR_NM AS BF_KOR_NM,
               B.ENG_NM AS BF_ENG_NM,
               B.CHCRT_NM AS BF_CHCRT_NM,
               B.OWNHOM_ZIP AS BF_OWNHOM_ZIP,
               B.OWNHOM_ADRES AS BF_OWNHOM_ADRES,
               B.OWNHOM_DETAIL_ADRES AS BF_OWNHOM_DETAIL_ADRES,
               B.OWNHOM_TELNO AS BF_OWNHOM_TELNO,
               B.LXTN_TELNO AS BF_LXTN_TELNO,
               B.MBTLNUM AS BF_MBTLNUM,
               B.EMGNC_TELNO AS BF_EMGNC_TELNO,
               B.EMAIL AS BF_EMAIL,
               B.INDVDL_EMAIL AS BF_INDVDL_EMAIL,
               FNC_DATESTR(B.BRTHDY) AS BF_BRTHDY,
               B.SLRCLD_AT AS BF_SLRCLD_AT,
               B.MRRG_AT AS BF_MRRG_AT,
               FNC_DATESTR(B.MRRG_DE) AS BF_MRRG_DE,
               B.PHOTO_ATCHMNFL_NO AS  BF_PHOTO_ATCHMNFL_NO,
               B.REG_DT AS  BF_REG_DT,
               B.REG_ID AS  BF_REG_ID,
               B.UPT_DT AS  BF_UPT_DT,
               B.UPT_ID AS  BF_UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = B.REG_ID) AS BF_REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = B.UPT_ID) AS BF_UPT_NM

          FROM (SELECT * FROM MHS_HRBASS_CHGREQ WHERE BFCHG_AFCHG_SE = '002') A,
               (SELECT * FROM MHS_HRBASS_CHGREQ WHERE BFCHG_AFCHG_SE = '001') B

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="empno != null and empno != ''">
                AND A.EMPNO = #{empno}
                AND B.EMPNO = #{empno}
            </if>
            <if test="changeReqstSn != null and changeReqstSn != ''">
                AND A.CHANGE_REQST_SN = #{changeReqstSn}
                AND B.CHANGE_REQST_SN = #{changeReqstSn}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= CONVERT(DATETIME, #{sRegDt} + ' 00:00:00') 
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= CONVERT(DATETIME, #{eRegDt} + ' 23:59:59')
                ]]>
             </if>
        </trim>
    </select>

    <update id="savePubusr002" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.savePubusr002 */
        MERGE INTO MHS_EMP_CHANGE A
             USING (SELECT
                    #{empno} EMPNO,
                    #{changeReqstSn} CHANGE_REQST_SN
                    FROM DUAL) B
                ON (
                    A.EMPNO = B.EMPNO AND 
                    A.CHANGE_REQST_SN = B.CHANGE_REQST_SN
                   )
        WHEN MATCHED THEN
        UPDATE SET

               REQST_DE= REPLACE(#{reqstDe},'-',''),
               CHANGE_SE= #{changeSe},
               ATCHMNFL_NO= #{atchmnflNo},
               CONFM_STTUS_CODE= #{confmSttusCode},
               CONFM_DE= REPLACE(#{confmDe},'-',''),
               CONFM_EMPNO= #{confmEmpno},
               RETURN_RESN= #{returnResn},
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               EMPNO,
               CHANGE_REQST_SN,
               REQST_DE,
               CHANGE_SE,
               ATCHMNFL_NO,
               CONFM_STTUS_CODE,
               CONFM_DE,
               CONFM_EMPNO,
               RETURN_RESN,
               REG_DT,
               REG_ID

        ) VALUES (

               #{empno},
               (select nvl(max(CHANGE_REQST_SN),0) + 1 from MHS_EMP_CHANGE),
               REPLACE(#{reqstDe},'-',''),
               #{changeSe},
               #{atchmnflNo},
               #{confmSttusCode},
               REPLACE(#{confmDe},'-',''),
               #{confmEmpno},
               #{returnResn},
               SYSDATE,
               #{regId}

        )
    </update>
    
    <update id="savePubusr002Tap1Before" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.savePubusr002Tap1Before */
        MERGE INTO MHS_HRBASS_CHGREQ A
             USING (SELECT
                    #{empno} EMPNO,
                    #{changeReqstSn} CHANGE_REQST_SN,
                    #{bfchgAfchgSe} BFCHG_AFCHG_SE
                    FROM DUAL) B
                ON (
                    A.EMPNO = B.EMPNO AND 
                    A.CHANGE_REQST_SN = B.CHANGE_REQST_SN AND 
                    A.BFCHG_AFCHG_SE = B.BFCHG_AFCHG_SE
                   )
        WHEN MATCHED THEN
        UPDATE SET

               KOR_NM= #{bfKorNm},
               ENG_NM= #{bfEngNm},
               CHCRT_NM= #{bfChcrtNm},
               OWNHOM_ZIP= #{bfOwnhomZip},
               OWNHOM_ADRES= #{bfOwnhomAdres},
               OWNHOM_DETAIL_ADRES= #{bfOwnhomDetailAdres},
               OWNHOM_TELNO= #{bfOwnhomTelno},
               LXTN_TELNO= #{bfLxtnTelno},
               MBTLNUM= #{bfMbtlnum},
               EMGNC_TELNO= #{bfEmgncTelno},
               EMAIL= #{bfEmail},
               INDVDL_EMAIL= #{bfIndvdlEmail},
               BRTHDY= REPLACE(#{bfBrthdy},'-',''),
               SLRCLD_AT= #{bfSlrcldAt},
               MRRG_AT= #{bfMrrgAt},
               MRRG_DE= REPLACE(#{bfMrrgDe},'-',''),
               PHOTO_ATCHMNFL_NO= #{bfPhotoAtchmnflNo},
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               EMPNO,
               CHANGE_REQST_SN,
               BFCHG_AFCHG_SE,
               KOR_NM,
               ENG_NM,
               CHCRT_NM,
               OWNHOM_ZIP,
               OWNHOM_ADRES,
               OWNHOM_DETAIL_ADRES,
               OWNHOM_TELNO,
               LXTN_TELNO,
               MBTLNUM,
               EMGNC_TELNO,
               EMAIL,
               INDVDL_EMAIL,
               BRTHDY,
               SLRCLD_AT,
               MRRG_AT,
               MRRG_DE,
               PHOTO_ATCHMNFL_NO,
               REG_DT,
               REG_ID

        ) VALUES (

               #{empno},
               (select nvl(max(CHANGE_REQST_SN),0) + 1 from MHS_HRBASS_CHGREQ),
               '001',
               #{bfKorNm},
               #{bfEngNm},
               #{bfChcrtNm},
               #{bfOwnhomZip},
               #{bfOwnhomAdres},
               #{bfOwnhomDetailAdres},
               #{bfOwnhomTelno},
               #{bfLxtnTelno},
               #{bfMbtlnum},
               #{bfEmgncTelno},
               #{bfEmail},
               #{bfIndvdlEmail},
               REPLACE(#{bfBrthdy},'-',''),
               #{bfSlrcldAt},
               #{bfMrrgAt},
               REPLACE(#{bfMrrgDe},'-',''),
               #{bfPhotoAtchmnflNo},
               SYSDATE,
               #{regId}

        )
    </update>
    
    <update id="savePubusr002Tap1After" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.savePubusr002Tap1After */
        MERGE INTO MHS_HRBASS_CHGREQ A
             USING (SELECT
                    #{empno} EMPNO,
                    #{changeReqstSn} CHANGE_REQST_SN,
                    #{bfchgAfchgSe} BFCHG_AFCHG_SE
                    FROM DUAL) B
                ON (
                    A.EMPNO = B.EMPNO AND 
                    A.CHANGE_REQST_SN = B.CHANGE_REQST_SN AND 
                    A.BFCHG_AFCHG_SE = B.BFCHG_AFCHG_SE
                   )
        WHEN MATCHED THEN
        UPDATE SET

               KOR_NM= #{korNm},
               ENG_NM= #{engNm},
               CHCRT_NM= #{chcrtNm},
               OWNHOM_ZIP= #{ownhomZip},
               OWNHOM_ADRES= #{ownhomAdres},
               OWNHOM_DETAIL_ADRES= #{ownhomDetailAdres},
               OWNHOM_TELNO= #{ownhomTelno},
               LXTN_TELNO= #{lxtnTelno},
               MBTLNUM= #{mbtlnum},
               EMGNC_TELNO= #{emgncTelno},
               EMAIL= #{email},
               INDVDL_EMAIL= #{indvdlEmail},
               BRTHDY= REPLACE(#{brthdy},'-',''),
               SLRCLD_AT= #{slrcldAt},
               MRRG_AT= #{mrrgAt},
               MRRG_DE= REPLACE(#{mrrgDe},'-',''),
               PHOTO_ATCHMNFL_NO= #{photoAtchmnflNo},
               UPT_DT = #{uptDt},
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               EMPNO,
               CHANGE_REQST_SN,
               BFCHG_AFCHG_SE,
               KOR_NM,
               ENG_NM,
               CHCRT_NM,
               OWNHOM_ZIP,
               OWNHOM_ADRES,
               OWNHOM_DETAIL_ADRES,
               OWNHOM_TELNO,
               LXTN_TELNO,
               MBTLNUM,
               EMGNC_TELNO,
               EMAIL,
               INDVDL_EMAIL,
               BRTHDY,
               SLRCLD_AT,
               MRRG_AT,
               MRRG_DE,
               PHOTO_ATCHMNFL_NO,
               REG_DT,
               REG_ID

        ) VALUES (

               #{empno},
               (select nvl(max(CHANGE_REQST_SN),0) from MHS_HRBASS_CHGREQ),
               '002',
               #{korNm},
               #{engNm},
               #{chcrtNm},
               #{ownhomZip},
               #{ownhomAdres},
               #{ownhomDetailAdres},
               #{ownhomTelno},
               #{lxtnTelno},
               #{mbtlnum},
               #{emgncTelno},
               #{email},
               #{indvdlEmail},
               REPLACE(#{brthdy},'-',''),
               #{slrcldAt},
               #{mrrgAt},
               REPLACE(#{mrrgDe},'-',''),
               #{photoAtchmnflNo},
               #{regDt},
               #{regId}

        )
    </update>

    <delete id="deletePubusr002" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002 */
        DELETE FROM MHS_EMP_CHANGE

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab1" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab1 */
        DELETE FROM MHS_HRBASS_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab2" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab2 */
        DELETE FROM MHS_INDVDLINFO_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab3" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab3 */
        DELETE FROM MHS_FAMILY_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab4" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab4 */
        DELETE FROM MHS_ACDMCR_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab5" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab5 */
        DELETE FROM MHS_CRQFS_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab6" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab6 */
        DELETE FROM MHS_ACNUT_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <delete id="deletePubusr002Tab7" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab7 */
        DELETE FROM MHS_FGGG_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
        <delete id="deletePubusr002Tab8" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.deletePubusr002Tab8 */
        DELETE FROM MHS_CAREER_CHGREQ

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND EMPNO = #{empno}
                AND CHANGE_REQST_SN = #{changeReqstSn}
        </trim>
    </delete>
    
    <select id="nowUserInfo" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* 변경전 사용자 정보 조회 */
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.selectPubusr002 */
        SELECT
               EMPNO, 
               BPLC_CODE,
               KOR_NM,
               ENG_NM, 
               UNISTR(CHCRT_NM) AS CHCRT_NM, 
               TO_CHAR(TO_DATE(FNC_DATESTR(ECNY_DE),'YYYY-MM-DD'),'YYYY-MM-DD') AS ECNY_DE, 
               FNC_DATESTR(RETIRE_DE) AS RETIRE_DE,
               CASE WHEN RETIRE_SE = 'T01' THEN '의원면직'
                    WHEN RETIRE_SE = 'T02' THEN '권고사직'
                    WHEN RETIRE_SE = 'T03' THEN '계약종료'
                    WHEN RETIRE_SE = 'T04' THEN '징계해고'
                    WHEN RETIRE_SE = 'T05' THEN '정년퇴직'
                    WHEN RETIRE_SE = 'T06' THEN '명예퇴직'
                    WHEN RETIRE_SE = 'T07' THEN '조기퇴직'
                    WHEN RETIRE_SE = 'T08' THEN '기타'
                    WHEN RETIRE_SE = 'T09' THEN '임용포기'
                    WHEN RETIRE_SE = 'T10' THEN '당연퇴직'
                    WHEN RETIRE_SE = 'T11' THEN '권고사직'
               END AS RETIRE_SE,
               CASE WHEN EMPL_SE = '001' THEN '정규직' WHEN EMPL_SE = '002' THEN '무기계약직' WHEN EMPL_SE = '004' THEN '계약직'WHEN EMPL_SE = '005' THEN '임시직' END AS EMPL_SE,
               ECNY_SE_CODE,
               FNC_GETDEPTNM(DEPT_CODE) AS DEPT_CODE,
               CASE WHEN HFFS_SE = 'J01' THEN '재직' WHEN HFFS_SE = 'J05' THEN '퇴직' WHEN HFFS_SE ='J03' THEN '휴직' END AS HFFS_SE,
               TO_CHAR(TO_DATE(BRTHDY,'YYYY-MM-DD'),'YYYY-MM-DD') AS BRTHDY, 
               TO_CHAR(TO_DATE(CUR_CLSF_EMPLMNDAY,'YYYY-MM-DD'),'YYYY-MM-DD') AS CUR_CLSF_EMPLMNDAY, 
               SLRCLD_AT, 
               DECODE(A.IHIDNUM,NULL,'',SUBSTR(A.IHIDNUM,1,6)||'-*******') AS IHIDNUM, 
               CASE WHEN SEXDSTN_SE = 'M' THEN '남자' WHEN SEXDSTN_SE = 'F' THEN '여자' END AS SEXDSTN_SE, 
               --CASE WHEN NATVFRGN_SE_CODE = '1' THEN '내국인' WHEN NATVFRGN_SE_CODE = '9' THEN '외국인' END AS 
               NATVFRGN_SE_CODE,
               NLTY_CODE,
               CASE WHEN SRCLS_CODE = '00' THEN '호봉-미적용'
                    ELSE '해당없음' END AS SRCLS_CODE,
               CASE WHEN CLSF_CODE='001' THEN '대표이사'
                    WHEN CLSF_CODE='002' THEN '이사'
                    WHEN CLSF_CODE='003' THEN '부장'
                    WHEN CLSF_CODE='004' THEN '차장'
                    WHEN CLSF_CODE='005' THEN '과장'
                    WHEN CLSF_CODE='006' THEN '대리'
                    WHEN CLSF_CODE='007' THEN '사원'
                    WHEN CLSF_CODE='008' THEN '인턴'
                    WHEN CLSF_CODE='009' THEN '고문'
               END AS CLSF_CODE,
               CASE WHEN OFCPS_CODE='100' THEN '대표이사'
                    WHEN OFCPS_CODE='200' THEN '이사'
                    WHEN OFCPS_CODE='300' THEN '부장'
                    WHEN OFCPS_CODE='400' THEN '차장'
                    WHEN OFCPS_CODE='500' THEN '과장'
                    WHEN OFCPS_CODE='600' THEN '대리'
                    WHEN OFCPS_CODE='700' THEN '사원'
                    WHEN OFCPS_CODE='800' THEN '인턴'
               END AS OFCPS_CODE,
               CASE WHEN JSSFC_CODE ='001' THEN '관리직'
                    WHEN JSSFC_CODE ='002' THEN '개발직'
                    WHEN JSSFC_CODE ='003' THEN '영업직'
                    WHEN JSSFC_CODE ='004' THEN '연구직'
                    WHEN JSSFC_CODE ='005' THEN '웹디자인'
                    WHEN JSSFC_CODE ='009' THEN '임시직'
               END AS JSSFC_CODE,
               CASE WHEN DTY_CODE='001' THEN '일반'
                     WHEN DTY_CODE='002' THEN '인사'
                     WHEN DTY_CODE='003' THEN '급여'
                     WHEN DTY_CODE='004' THEN '복리후생'
                     WHEN DTY_CODE='005' THEN '총무'
                     WHEN DTY_CODE='006' THEN '기술(건축)'
                     WHEN DTY_CODE='007' THEN '기술(소방)'
                     WHEN DTY_CODE='008' THEN '수영강사'
                     WHEN DTY_CODE='009' THEN '헬스강사'
                     WHEN DTY_CODE='010' THEN '테니스강사'
                     WHEN DTY_CODE='011' THEN '주차관리'
                     WHEN DTY_CODE='012' THEN '환경관리'
                     WHEN DTY_CODE='013' THEN '시설안내'
                     WHEN DTY_CODE='014' THEN '사무보조'
                     WHEN DTY_CODE='015' THEN '생활체육'
                     ELSE '해당없음'
               END AS DTY_CODE,
               CASE WHEN RSPOFC_CODE='100' THEN '대표이사'
                    WHEN RSPOFC_CODE='200' THEN '임원'
                    WHEN RSPOFC_CODE='300' THEN '팀장'
                    WHEN RSPOFC_CODE='400' THEN '팀원'
                    WHEN RSPOFC_CODE='500' THEN '부서장'
               END AS RSPOFC_CODE,
               JBLN_CODE,
               ZIP,
               OWNHOM_ADRES,
               OWNHOM_DETAIL_ADRES,
               OWNHOM_ENG_ADRES,
               OWNHOM_TELNO,
               LXTN_TELNO,
               MBTLNUM,
               EMGNC_TELNO,
               EMAIL,
               INDVDL_EMAIL,
               MRRG_AT,
               CASE WHEN MRRG_AT = '1' THEN (SELECT TO_CHAR(TO_DATE(MRRG_DE,'YYYY-MM-DD'),'YYYY-MM-DD') FROM MHS_INDVDLINFO A WHERE A.EMPNO = '202101')
                    ELSE ''
               END AS MRRG_DE,
               LAYOFF_SE_CODE,
               PHOTO_ATCHMNFL_NO,
               SIGN_ATCHMNFL_NO,
               CASHIER_AT,
               HDADPT_AT,
               FNC_GETDEPTNM(HDADPT_DEPT_CODE) AS HDADPT_DEPT_CODE,
               FNC_GETDEPTNM(DISP_DEPT_CODE) AS DISP_DEPT_CODE,
               DPRLR_AT,
               LBUN_SBSCRB_AT,
               MUTAID_SBSCRB_AT,
               DISP_WORK_AT,
               FLEXBIZ_AT,
               BABY_SHRTEN_WORK_AT,
               SALPEAK_AT,
               CASE WHEN SALARY_APRP_CODE = '100' THEN '책정임금'
                    WHEN SALARY_APRP_CODE = '100' THEN '호봉'
                    WHEN SALARY_APRP_CODE = '100' THEN '연봉'
                    ELSE '해당없음'
               END AS SALARY_APRP_CODE,
               ANSALSYS_AT,
               APNTC_SDT,
               APNTC_EDT,
               CASE WHEN INCMTAXRT_CODE = '01' THEN '80%'
                    WHEN INCMTAXRT_CODE = '02' THEN '100%'
                    WHEN INCMTAXRT_CODE = '03' THEN '120%'
                    ELSE '해당없음'
               END AS INCMTAXRT_CODE,
               CASE WHEN SALARY_PYMNT_AT = '1' THEN '지급'
                    WHEN SALARY_PYMNT_AT = '1' THEN '미지급'
                    ELSE '해당없음'
               END AS SALARY_PYMNT_AT,
                CASE WHEN RETIRE_ANNTY_KIND_CODE = '1' THEN '이연계좌'
                    WHEN RETIRE_ANNTY_KIND_CODE = '2' THEN 'IRP'
                    ELSE '해당없음'
               END AS RETIRE_ANNTY_KIND_CODE,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               FNC_DATESTR(NXTTRM_PROMT_DE) AS NXTTRM_PROMT_DE,
               FNC_DATESTR(RETIRE_ANNTY_SBSCRB_DE) AS RETIRE_ANNTY_SBSCRB_DE,
               RETIRE_ANNTY_DPSTNM,
               RETIRE_ANNTY_BANK_CODE,
               RETIRE_ANNTY_ACNUTNO,
               LAYOFF_ALT_HNF_AT,
               FNC_DATESTR(NON_TMLMT_CNTRCT_CHANGE_DE) AS NON_TMLMT_CNTRCT_CHANGE_DE,
               SENIOR_SE,
               FNC_DATESTR(RETIRE_ANNTY_DC_SBSCRB_DE) AS RETIRE_ANNTY_DC_SBSCRB_DE,
               FNC_DATESTR(LAST_PROMT_DE) AS LAST_PROMT_DE,
               FNC_DATESTR(NON_TMLMT_CNTTK_CHANGE_DE) AS NON_TMLMT_CNTTK_CHANGE_DE,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MHS_EMP A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="empno != null and empno != ''">
                AND EMPNO = #{empno}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= TO_DATE(#{sRegDt} || '000000','YYYY-MM-DDHH24MISS')
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= TO_DATE(#{eRegDt} || '235959','YYYY-MM-DDHH24MISS')
                ]]>
             </if>
        </trim>
    </select>
    
    <select id="searchUserPassword" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* 패스워드 조건 조회 */
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.searchUserPassword */
        SELECT
               A.EMPNO,
               (SELECT PASSWORD_SETTING_MTH FROM STM_ENV_SETTING) AS PASSWORD_SETTING_MTH,
               (SELECT KOR_NM FROM MHS_EMP B WHERE B.EMPNO = A.EMPNO) AS EMP_NM,
               A.USER_PASSWORD
        
        FROM STM_USERS A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="empno != null and empno != ''">
                AND A.EMPNO = #{empno}
            </if>
        </trim>
    </select>
    
    <update id="saveChangePw" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.saveChangePw */
        MERGE INTO STM_USERS A
             USING (SELECT
                    (SELECT USER_ID FROM STM_USERS WHERE EMPNO = #{empno}) USER_ID
                    ) B
                ON (
                    A.USER_ID = B.USER_ID
                   )
        WHEN MATCHED THEN
        UPDATE SET

               USER_PASSWORD = #{userPassword},
               PASSWORD_UPDT = SYSDATE,
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               EMPNO,
               USER_ID,
               USER_PASSWORD,
               PASSWORD_UPDT,
               REG_DT,
               REG_ID

        ) VALUES (

               #{empno},
               #{regId},
               #{userPassword},
               GETDATE(),
               GETDATE(),
               #{regId}

        )
    </update>
    
    <!-- 패스워드 변경 -->
    <insert id="saveChangePwHist" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.saveChangePwHist */
        INSERT INTO STM_USER_HIST (
            CHANGE_DT, 
            CHANGE_DE, CHANGE_TIME, CHANGE_SE, CHANGE_EMPNO, CHANGE_USER_ID, CHANGE_MENU_ID, CHANGE_REQUST_IP, CHANGE_CAUSE_SE,
            USER_ID, EMPNO, USER_PASSWORD, USER_NM, EMPL_AT, USE_AT, AUTHOR_SETTING, PASSWORD_UPDT,USER_IP,
            REG_DT, REG_ID, UPT_DT, UPT_ID
            )
        SELECT
            (CASE WHEN #{changeSe} = '001' THEN REG_DT WHEN #{changeSe} = '002' THEN UPT_DT WHEN #{changeSe} = '003' THEN GETDATE() ELSE GETDATE() END) AS CHANGE_DT, 
            FNC_DATE_TO_STR((CASE WHEN #{changeSe} = '001' THEN REG_DT WHEN #{changeSe} = '002' THEN UPT_DT WHEN #{changeSe} = '003' THEN GETDATE() ELSE GETDATE() END),'') AS CHANGE_DE, 
            CONVERT(VARCHAR(8), (CASE WHEN #{changeSe} = '001' THEN REG_DT WHEN #{changeSe} = '002' THEN UPT_DT WHEN #{changeSe} = '003' THEN GETDATE() ELSE GETDATE() END), 108) AS CHANGE_TIME, 
            #{changeSe}, 
            (CASE WHEN #{changeSe} = '001' THEN #{regId} WHEN #{changeSe} = '002' THEN #{uptId} WHEN #{changeSe} = '003' THEN #{uptId} ELSE #{uptId} END) AS CHANGE_EMPNO, 
            (CASE WHEN #{changeSe} = '001' THEN #{regId} WHEN #{changeSe} = '002' THEN #{uptId} WHEN #{changeSe} = '003' THEN #{uptId} ELSE #{uptId} END) AS CHANGE_USER_ID, 
            #{changeMenuId}, #{changeRequstIp}, #{changeCauseSe},
            USER_ID, EMPNO, USER_PASSWORD, USER_NM, EMPL_AT, USE_AT, AUTHOR_SETTING, PASSWORD_UPDT,USER_IP,
            REG_DT, REG_ID, UPT_DT, UPT_ID
        FROM STM_USERS
        WHERE EMPNO = (CASE WHEN #{changeSe} = '001' THEN #{empno} WHEN #{changeSe} = '002' THEN #{empno} WHEN #{changeSe} = '003' THEN #{empno} ELSE #{empno} END)
    </insert>
    
     <update id="applyPubusr002" parameterType="kr.co.dbvision.api.pub.usr.pubusr002.entity.Pubusr002">
        /* kr.co.dbvision.api.pub.usr.pubusr002.service.mapper.Pubusr002Mapper.applyPubusr002 */
        UPDATE MHS_EMP_CHANGE
            SET CONFM_STTUS_CODE = '001',
                UPT_DT = SYSDATE,
                UPT_ID = #{uptId}
            WHERE CHANGE_REQST_SN = #{changeReqstSn}
     </update>
</mapper>
