<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.dbvision.api.mhs.flx.mhsflx001.service.mapper.Mhsflx001Mapper">

    <select id="selectMhsflx001List" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mhs.flx.mhsflx001.service.mapper.Mhsflx001Mapper.selectMhsflx001List */
        SELECT
               WORK_TY_CODE,
               WORK_TY_CODE_NM,
               USE_AT,
               DECODE(USE_AT, '1', '사용', '0', '미사용', '미사용') AS USE_AT_NM,
               BASS_TY_AT,
               DECODE(BASS_TY_AT, '1', '사용', '0', '미사용', '미사용') AS BASS_TY_AT_NM,
               CALC_PD,
               CORE_TIME_APPLC_AT,
               DECODE(CORE_TIME_APPLC_AT, '1', '적용', '0', '미적용', '미적용') AS CORE_TIME_APPLC_AT_NM,
               ATTEND_CONFIRM_AT,
               DECODE(ATTEND_CONFIRM_AT, '1', '확인', '0', '미확인', '미확인') AS ATTEND_CONFIRM_AT_NM,
               DAY_RECOG_WORKTIME,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MHS_WORKTY A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="workTyCode != null and workTyCode != ''">
                AND (WORK_TY_CODE like '%' || #{workTyCode} || '%' OR WORK_TY_CODE_NM like '%' || #{workTyCode} || '%') 
            </if>
            <if test="useAt != null and useAt != ''">
                AND USE_AT = #{useAt}
            </if>
            <if test="sRegDt != null and sRegDt != ''">
                <![CDATA[
                AND REG_DT >= TO_DATE(#{sRegDt} || '000000','YYYY-MM-DDHH24MISS')
                ]]>
            </if>
            <if test="eRegDt != null and eRegDt != ''">
                <![CDATA[
                AND REG_DT <= TO_DATE(#{eRegDt} || '235959','YYYY-MM-DDHH24MISS')
                ]]>
             </if>
        </trim>
    </select>

    <select id="selectMhsflx001" parameterType="egovMapForNull" resultType="egovMapForNull">
        /* kr.co.dbvision.api.mhs.flx.mhsflx001.service.mapper.Mhsflx001Mapper.selectMhsflx001 */
        SELECT
               WORK_TY_CODE,
               WORK_TY_CODE_NM,
               USE_AT,
               BASS_TY_AT,
               CALC_PD,
               CORE_TIME_APPLC_AT,
               ATTEND_CONFIRM_AT,
               DAY_RECOG_WORKTIME,
               REG_DT,
               REG_ID,
               UPT_DT,
               UPT_ID,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.REG_ID) AS REG_NM,
               (SELECT USER_NM FROM STM_USERS WHERE USER_ID = A.UPT_ID) AS UPT_NM

          FROM MHS_WORKTY A

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="workTyCode != null and workTyCode != ''">
                AND WORK_TY_CODE = #{workTyCode}
            </if>
        </trim>
    </select>

    <update id="saveMhsflx001" parameterType="kr.co.dbvision.api.mhs.flx.mhsflx001.entity.Mhsflx001">
        /* kr.co.dbvision.api.mhs.flx.mhsflx001.service.mapper.Mhsflx001Mapper.saveMhsflx001 */
        MERGE INTO MHS_WORKTY A
             USING (SELECT
                    #{workTyCode} WORK_TY_CODE
                    FROM DUAL) B
                ON (
                    A.WORK_TY_CODE = B.WORK_TY_CODE
                   )
        WHEN MATCHED THEN
        UPDATE SET

               WORK_TY_CODE_NM= #{workTyCodeNm},
               USE_AT= #{useAt},
               BASS_TY_AT= #{bassTyAt},
               CALC_PD= #{calcPd},
               CORE_TIME_APPLC_AT= #{coreTimeApplcAt},
               ATTEND_CONFIRM_AT= #{attendConfirmAt},
               DAY_RECOG_WORKTIME= #{dayRecogWorktime},
               UPT_DT = SYSDATE,
               UPT_ID = #{uptId}

        WHEN NOT MATCHED THEN
        INSERT (

               WORK_TY_CODE,
               WORK_TY_CODE_NM,
               USE_AT,
               BASS_TY_AT,
               CALC_PD,
               CORE_TIME_APPLC_AT,
               ATTEND_CONFIRM_AT,
               DAY_RECOG_WORKTIME,
               REG_DT,
               REG_ID

        ) VALUES (

               #{workTyCode},
               #{workTyCodeNm},
               #{useAt},
               #{bassTyAt},
               #{calcPd},
               #{coreTimeApplcAt},
               #{attendConfirmAt},
               #{dayRecogWorktime},
               SYSDATE,
               #{regId}

        )
    </update>

    <delete id="deleteMhsflx001" parameterType="kr.co.dbvision.api.mhs.flx.mhsflx001.entity.Mhsflx001">
        /* kr.co.dbvision.api.mhs.flx.mhsflx001.service.mapper.Mhsflx001Mapper.deleteMhsflx001 */
        DELETE FROM MHS_WORKTY

        <trim prefix="WHERE" prefixOverrides="AND|OR">
                AND WORK_TY_CODE = #{workTyCode}
        </trim>
    </delete>
</mapper>
